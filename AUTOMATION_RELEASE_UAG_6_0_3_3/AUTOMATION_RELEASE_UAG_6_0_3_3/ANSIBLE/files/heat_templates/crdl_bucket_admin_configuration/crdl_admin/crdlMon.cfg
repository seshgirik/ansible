#set -xv
MonLogDir="/tmp/"
MonCheckInterval=3 # Interval in seconds
curlTimeout=2	   # curl command timeout in seconds
allNodeIPList="CRDL_CLUSTER_DB_IPS"
crdlUser=Administrator
crdlPswd=mavenir
crdlPort=8091
crdlBucket=SCNfvCouchbase
AdminStatus="ACTIVE"

allNodeIPListDelimited=`echo $allNodeIPList | sed 's/ /,/g'`

unset -f createLogFile;
createLogFile() {
  mkdir -p ${MonLogDir}
  Logfile=${MonLogDir}/crdlMon_log.txt

  if [ -f "$Logfile" ]; then
      typeset -i logSize=`ls -l $Logfile|awk '{print $5}'`
      [ "$logSize" -gt "10000" ] && mv $Logfile $Logfile.b4
  fi
  touch $Logfile
}

unset -f checkNodeUp;
checkNodeUp()
{
   nodeIP=$1
   nodePort=$2
   crdlBucket=$3
   crdlUser=$4
   crdlPswd=$5
   isNodeUp=`curl -s -I --connect-timeout $curlTimeout --max-time $curlTimeout -u $crdlUser:$crdlPswd http://$nodeIP:$nodePort/pools/default/buckets/$crdlBucket/nodes | grep HTTP | grep "1.1 2" | wc -l`
   #echo "checkNodeUp: isNodeUp=$isNodeUp"
   #return $isNodeUp
   echo $isNodeUp
}

unset -f raiseFailover;
raiseFailover()
{
    availableNodeIP=$1
    nodePort=$2
    downNodeIP=$3
    crdlUser=$4
    crdlPswd=$5
    curl -v -X POST -u $crdlUser:$crdlPswd http://$availableNodeIP:$nodePort/controller/failOver -d otpNode=ns_1@$downNodeIP
    result=$?
    #echo curl -v -X POST -u $crdlUser:$crdlPswd http://$availableNodeIP:$nodePort/controller/failOver -d otpNode=ns_1@$downNodeIP
    if [ $result -eq 0 ]; then
	failoverSuccessful=1
    else
	failoverSuccessful=0
    fi
    #return $failoverSuccessful
    echo $failoverSuccessful
}

unset -f raiseRebalance;
raiseRebalance()
{
    allNodeIPListDelimited=$1
    nodePort=$2
    downNodeIP=$3
    crdlUser=$4
    crdlPswd=$5

    allNodeIPList=`echo $allNodeIPListDelimited | sed 's/,/ /g'`
    finalAvailableNodes=""
    for node in $allNodeIPList
    do
	if [ "$node" != "$downNodeIP" ]; then
	   availableNodeIP="$node"
           if [ X"$finalAvailableNodes" == X ]; then
	      delimiter=""
	   else
	      delimiter=","
	   fi
	   finalAvailableNodes="$finalAvailableNodes""$delimiter"ns_1@"$node"
	fi
    done

    if [ X"$finalAvailableNodes" != X ]; then
    	curl -v -X POST -u $crdlUser:$crdlPswd http://$availableNodeIP:$nodePort/controller/rebalance -d "knownNodes=$finalAvailableNodes"
    	result=$?
    	if [ $result -eq 0 ]; then
           rebalanceSuccessful=1
    	else
           rebalanceSuccessful=0
        fi
    else
	rebalanceSuccessful=0
    fi
    #return $rebalanceSuccessful
    echo $rebalanceSuccessful
}

unset -f raiseRebalanceWithRecovery;
raiseRebalanceWithRecovery()
{
    allNodeIPListDelimited=$1
    nodePort=$2
    downNodeIP=$3
    crdlUser=$4
    crdlPswd=$5

    allNodeIPList=`echo $allNodeIPListDelimited | sed 's/,/ /g'`
    finalAvailableNodes=""
    for node in $allNodeIPList
    do
        if [ "$node" != "$downNodeIP" ]; then
	   availableNodeIP="$node"
	fi
        if [ X"$finalAvailableNodes" == X ]; then
            delimiter=""
        else
            delimiter=","
        fi
        finalAvailableNodes="$finalAvailableNodes""$delimiter"ns_1@"$node"
    done

    if [ X"$finalAvailableNodes" != X ]; then
	echo curl -u $crdlUser:$crdlPswd http://$availableNodeIP:$nodePort/controller/setRecoveryType -d "otpNode=ns_1@$downNodeIP" -d 'recoveryType=delta'
	curl -u $crdlUser:$crdlPswd http://$availableNodeIP:$nodePort/controller/setRecoveryType -d "otpNode=ns_1@$downNodeIP" -d 'recoveryType=delta'
	echo curl -v -X POST -u $crdlUser:$crdlPswd http://$availableNodeIP:$nodePort/controller/rebalance -d "knownNodes=$finalAvailableNodes"
	curl -v -X POST -u $crdlUser:$crdlPswd http://$availableNodeIP:$nodePort/controller/rebalance -d "knownNodes=$finalAvailableNodes"
        result=$?
        if [ $result -eq 0 ]; then
           rebalanceSuccessful=1
        else
           rebalanceSuccessful=0
        fi
    else
        rebalanceSuccessful=0
    fi
    #return $rebalanceSuccessful
    echo $rebalanceSuccessful
}
