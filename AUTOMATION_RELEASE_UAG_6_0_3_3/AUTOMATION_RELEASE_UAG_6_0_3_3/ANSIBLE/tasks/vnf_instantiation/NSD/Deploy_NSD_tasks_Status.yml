---

    - include_tasks: ../https_request_no_template.yml
      vars:
        URL: "{{DEPLOY_NSD_URL}}"
        METHOD: "POST"
        PAYLOAD: "rowData={\"version\":\"{{NSD_Vers_1}}\",\"type\":\"NSD\",\"descriptorId\":\"{{NSD_Id_1}}\",\"namespace\":\"urn:mitel:params:xml:ns:yang:nsd\",\"name\":\"{{NSD_Name}}\",\"id\":\"{{NSD_DB_Ids}}\",\"uniqueId\":\"{{NSD_Unique_Id}}\",\"status\":\"ONBOARDED\",\"cloudProfileID\":\"{{Cloud_Type}}-{{POP_IP}}-{{Tenant}}-{{Tenant_User_Name}}\"}"
      when: (NSD_Id_1) and (NSD_Name) and (NSD_DB_Ids) and (NSD_Unique_Id)

    # - pause: seconds=180

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select status from nsd_descriptor_status where fk_nsd_descriptor='{{NSD_DB_Ids}}'"
      when: NSD_DB_Ids is defined
    - set_fact: NSD_Id_Status={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - command: "mysql -u{{ MYSQL_USER }} -p{{ MYSQL_PASSWD }} {{ MYSQL_DB }} -sN -e \"select status from nsd_descriptor_status where fk_nsd_descriptor='{{NSD_DB_Ids}}'\" "
      register: NSD_STATUS_RES
      remote_user: "{{CMS_IP_SYSUSER}}"
      retries: "{{DESCRIPTOR_RETRIES}}"
      delay: "{{ DELAY }}"
      until: ( NSD_DB_Ids is not defined) or ( NSD_STATUS_RES.stdout_lines.0|lower in "Deployed"|lower ) or ( NSD_STATUS_RES.stdout_lines.0|lower in "InUse"|lower ) or ( NSD_STATUS_RES.stdout_lines.0|lower in "DEPLOYFAILED"|lower )
      ignore_errors: yes

    - name: fail the play if the previous command did not succeed
      fail:
        msg:
        - ""
        - ""
        - "################################################################"
        - "################################################################"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                 NSD STATUS: {{NSD_STATUS_RES['stdout_lines'][0].rjust(12)}}                 ###"
        - "###     Somthing went wrong, Please check the logs or DB     ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "################################################################"
        - "################################################################"
        - ""
        - ""
      when: (not NSD_STATUS_RES.stdout_lines.0|lower in "Deployed"|lower) and (not NSD_STATUS_RES.stdout_lines.0|lower in "InUse"|lower)

    - debug:
        msg:
        - ""
        - ""
        - "################################################################"
        - "################################################################"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###             NSD DEPLOYEMENT WAS SUCCESSFUL!!!            ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "################################################################"
        - "################################################################"
        - ""
        - ""
      when: (NSD_STATUS_RES.stdout_lines.0|lower in "Deployed"|lower) or  (NSD_STATUS_RES.stdout_lines.0|lower in "InUse"|lower )

#
#     - include_tasks: ../query_db.yml
#       vars:
#          QUERY: "select status from nsd_descriptor_status where fk_nsd_descriptor='{{NSD_DB_Ids}}'"
#       when: NSD_DB_Ids is defined
# #    - set_fact: NSD_Id_Status={{RESP.stdout_lines.0}}
#       when: RESP.stdout_lines.0 is defined
#       retries: "{{ DESCRIPTOR_RETRIES }}"
#       delay: "{{ DELAY }}"
#       until: ( not NSD_DB_Ids ) or ( RESP.stdout_lines.0|lower in "Onboarded"|lower ) or ( RESP.stdout_lines.0|lower in "InUse"|lower )
#
#     - name: fail the play if the previous command did not succeed
#       fail: msg="NSD is in {{RESP.stdout_lines.0}} state... Somthing went wrong, Please check the logs or DB"
#       when: not ( ( RESP.stdout_lines.0|lower in "Onboarded"|lower ) or ( RESP.stdout_lines.0|lower in "InUse"|lower ) or ( RESP.stdout_lines.0|lower in "Deployed"|lower ) )
