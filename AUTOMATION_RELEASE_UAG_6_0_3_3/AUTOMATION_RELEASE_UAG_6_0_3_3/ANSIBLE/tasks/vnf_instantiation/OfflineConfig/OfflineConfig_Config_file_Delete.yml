---


    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select id from vnfd_descriptor where vnfd_id='{{xmlIDresp.matches[0][\"vnfd-id\"]}}' and version='{{xmlVERresp.matches[0][\"descriptor-version\"]}}'"
      when: (xmlIDresp.matches[0]["vnfd-id"] is defined)  and  (xmlVERresp.matches[0]["descriptor-version"] is defined)
    - set_fact: VNFD_DB_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
          QUERY: "select id from data_model where vnfd_id='{{VNFD_DB_Id}}'"
      when: VNFD_DB_Id is defined
    - set_fact: Data_Model_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
          QUERY: "select id from vdu_config_status where fk_vnfd_descriptor='{{VNFD_DB_Id}}'"
      when: VNFD_DB_Id is defined
    - set_fact: Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
          QUERY: "select id from vnf_data_config where name='Snapshot-{{NameToBeUsed}}'"
      when: NameToBeUsed is defined
    - set_fact: OfflineConfig_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select fk_nsd_descriptor from vnfd_descriptor where id='{{VNFD_DB_Id}}' and version='{{xmlVERresp.matches[0][\"descriptor-version\"]}}'"
      when: (VNFD_DB_Id is defined)  and  (xmlVERresp.matches[0]["descriptor-version"] is defined)
    - set_fact: VNFD_NSD_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select id from vdu_config_status where fk_vnfd_descriptor='{{VNFD_DB_Id}}'"
      when: VNFD_DB_Id is defined
    - set_fact: VDU_DB_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select id from nsd_descriptor where id='{{VNFD_NSD_Id}}'"
      when: VNFD_NSD_Id is defined
    - set_fact: NSD_DB_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select status from nsd_descriptor_status where fk_nsd_descriptor='{{NSD_DB_Id}}'"
      when: NSD_DB_Id is defined
    - set_fact: NSD_Id_Status={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - fail:
        msg:
        - ""
        - ""
        - "################################################################"
        - "################################################################"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###            Config Data Delete is not possible            ###"
        - "###                 NSD STATUS: {{NSD_Id_Status.rjust(10)}}                  ###"
        - "###     First Terminate NSD/Deattach Offline Config data     ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "################################################################"
        - "################################################################"
        - ""
        - ""
      when: (NSD_Id_Status is defined) and ( NSD_Id_Status|lower == "Deployed"|lower )

    # - name: fail the play when NSD-Status is Deployed
    #   fail: msg="Config Data Delete is not possible as NSD-Status is {{NSD_Id_Status}}  First Terminate NSD/Deattach Offline Config data"
    #   when: (NSD_Id_Status is defined) and ( NSD_Id_Status|lower == "Deployed"|lower )


    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select version from cms_version"
    - set_fact: CMS_Version={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../https_request_no_template.yml
      vars:
        URL: "{{VNF_OFFLINE_CONFIG_URL}}"
        METHOD: "POST"
        PAYLOAD: "rowData={\"configuredId\":\"-1\",\"configuredName\":\"\",\"fkDataModel\":null,\"fkVnfdDescriptor\":null,\"vdu\":\"{{xmlVDUIDresp.matches[0].id}}-{{xmlVERresp.matches[0][\"descriptor-version\"]}}\",\"vduId\":\"{{Id}}\"}"
      when: not ( {{NSD_Id_Status|lower}} == "Deployed"|lower ) and (xmlVDUIDresp.matches[0].id) and (xmlVERresp.matches[0]["descriptor-version"])
