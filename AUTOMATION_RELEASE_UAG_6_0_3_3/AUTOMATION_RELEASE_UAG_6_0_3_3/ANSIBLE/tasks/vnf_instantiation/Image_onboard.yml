---

- name: "Get tenant Id for Tenant {{Tenant_Name}}"
  include_tasks: query_db.yml
  vars:
      QUERY: "SELECT id FROM cloud_tenant_config WHERE name='{{Tenant_Name}}'"

- set_fact:
     Tenant_id: "{{ RESP.stdout_lines.0 }}"

- name: Getting Access Token
  uri:
      url: "{{LOGIN_URL}}"
      method: "POST"
      body: '{"authType": "LOCAL", "password": "{{CMS_WEB_PASSWORD}}", "username": "{{CMS_WEB_USER}}"}'
      status_code:  200
      body_format: json
      validate_certs: no
  delegate_to: localhost
  register: login_response
  
- include_tasks: Image_onboard_incl.yml item="{{item}}"
  with_items: "{{IMAGE_INFO}}"

- set_fact:
    IMAGE_QUERY_BUILDER: ""

- set_fact:
    IMAGE_QUERY_BUILDER: "{{IMAGE_QUERY_BUILDER}}OR  name='{{item.name}}'"
  with_items: "{{IMAGE_INFO}}"

- command: "mysql -u{{ MYSQL_USER }} -p{{ MYSQL_PASSWD }} {{ MYSQL_DB }} -sN -e \"SELECT count(status) FROM image_config_status  WHERE fk_image_config in (select id from image_config where {{IMAGE_QUERY_BUILDER[3:]}}) AND ((not status='Uploaded') AND (not status='InUse')) \" "
  register: STATUS_RESP
  remote_user: "{{CMS_IP_SYSUSER}}"
  retries: "{{DESCRIPTOR_RETRIES}}"
  delay: "{{ DELAY }}"
  until: STATUS_RESP.stdout == "0"
  ignore_errors: yes

- debug:
    msg:
    - ""
    - ""
    - "################################################################"
    - "################################################################"
    - "###                                                          ###"
    - "###                                                          ###"
    - "###                                                          ###"
    - "###         ALL IMAGES WERE UPLOADED SUCCESSFULLY!!!         ###"
    - "###                                                          ###"
    - "###                                                          ###"
    - "###                                                          ###"
    - "################################################################"
    - "################################################################"
    - ""
    - ""
  when: ( STATUS_RESP.stdout == "0")

- fail:
    msg:
    - ""
    - ""
    - "################################################################"
    - "################################################################"
    - "###                                                          ###"
    - "###                                                          ###"
    - "###                                                          ###"
    - "###          {{STATUS_RESP.stdout}} IMAGES WERE NOT UPLOADED SUCCESSFULLY         ###"
    - "###  PLEASE CHECK THE LOGS, RESOLVE THE ISSUE AND TRY AGAIN  ###"
    - "###                                                          ###"
    - "###                                                          ###"
    - "###                                                          ###"
    - "################################################################"
    - "################################################################"
    - ""
    - ""
  when: not ( STATUS_RESP.stdout == "0")


- include_tasks: setup_pwdless_generic.yml PWDLESS_IP="{{CONTROLLER_IP}}" PWDLESS_PASSWD="{{CONTROLLER_LOGIN_PASSWD}}" PWDLESS_USER="{{CONTROLLER_LOGIN_USER}}"
  ignore_errors: yes

- shell: "source {{CONTROLLER_KEYSTONE_PATH}} && openstack image set {{item.key}} --property {{item.value}}"
  delegate_to: "{{CONTROLLER_IP}}"
  remote_user: "{{CONTROLLER_LOGIN_USER}}"
  when: item.value != ""
  with_dict: "{{IMAGE_PROPERTIES}}"
  ignore_errors: yes
