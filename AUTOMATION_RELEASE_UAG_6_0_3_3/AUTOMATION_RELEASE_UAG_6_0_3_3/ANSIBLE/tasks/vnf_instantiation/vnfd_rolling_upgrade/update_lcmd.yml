- name: Get Namespace
  shell: "grep -o 'xmlns=.*>' {{file}} | grep -o '\".*\"'"
  register: LCMD_NAMESPACE
  delegate_to: localhost

- set_fact:
    LCMD_NAMESPACE: "{{LCMD_NAMESPACE.stdout_lines.0}}"
    T_LIST: [1]

- set_fact:
    MODDED_XML_STR: "{{lookup('file', '{{file}}') | regex_replace('xmlns=.*>', '>')}}"

- name: Get LCMD METADATA ID
  xml:
    xmlstring: "{{MODDED_XML_STR}}"
    xpath: life-cycle-state-metadata/metadata-id
    content: text
  register: METADATA_ID
  delegate_to: localhost

- set_fact:
    METADATA_ID: "{{METADATA_ID.matches[0]['metadata-id']}}"

- set_fact:
    VNFD_ID: ""

- shell: "grep -e 'vnfd-id' `(grep -r \"<life-cycle-state-metadata>{{METADATA_ID}}</life-cycle-state-metadata>\" {{DESCRIPTOR_PATH}}/{{DESCRIPTOR_INFO.0}}/ | awk '{print $1}' | cut -d':' -f1)` | sed -e 's,.*<vnfd-id>\\([^<]*\\)</vnfd-id>.*,\\1,g'"
  register: VNFD_ID_R
  delegate_to: localhost

- set_fact:
    VNFD_ID: "{{VNFD_ID_R.stdout_lines.0}}"
  when: VNFD_ID_R.stdout_lines.0 is defined

# - set_fact:
#     VNFD_ID: ""
#   when: not VNFD_ID_R.stdout_lines.0 is defined

- debug: msg="{{VNFD_ID}}"
- name: Set LCMD NAME
  xml:
    xmlstring: "{{MODDED_XML_STR}}"
    xpath: life-cycle-state-metadata/name
    value: "{{VNFD_UPGRADE_PARAMS[VNFD_ID].NEW_LCMD_NAME}}"
  register: new_lcmd_xml
  when: VNFD_ID in VNFD_UPGRADE_PARAMS
  delegate_to: localhost

- name: Set LCMD METADATA_ID
  xml:
    xmlstring: "{{new_lcmd_xml.xmlstring[39:]}}"
    xpath: life-cycle-state-metadata/metadata-id
    value: "{{VNFD_UPGRADE_PARAMS[VNFD_ID].NEW_LCMD_NAME}}"
  register: new_lcmd_xml
  when: VNFD_ID in VNFD_UPGRADE_PARAMS
  delegate_to: localhost

- set_fact:
    MODDED_XML_STR: "{{new_lcmd_xml.xmlstring[39:]}}"
  when: new_lcmd_xml.xmlstring is defined

- name: Get LCMD METADATA ID
  xml:
    xmlstring: "{{MODDED_XML_STR}}"
    xpath: life-cycle-state-metadata/metadata-id
    content: text
  register: METADATA_ID
  delegate_to: localhost

- xml:
    xmlstring: "{{MODDED_XML_STR}}"
    xpath: life-cycle-state-metadata/metadata-id
    value: "{{METADATA_ID.matches[0]['metadata-id']}}"
  register: new_lcmd_xml
  delegate_to: localhost

- copy: content="{{new_lcmd_xml.xmlstring[39:]|replace('<vdu-descriptor>','<vdu-descriptor xmlns='+LCMD_NAMESPACE+'>')}}" dest={{file}}
  delegate_to: localhost
  # loop: "{{T_LIST}}"
  # loop_control:
  #   loop_var: DUMMY_IND

- xml:
    xmlstring: "{{MODDED_XML_STR}}"
    xpath: life-cycle-state-metadata/states/event-list/event/actions/vdu-depends-on
    content: "text"
  register: new_1_lcmd_xml
  delegate_to: localhost

- set_fact:
    MODDED_JSON: []

- include_tasks: modify_json_string.yml JSON_STR="{{VDU_STR['vdu-depends-on']}}"
  loop: "{{new_1_lcmd_xml.matches}}"
  loop_control:
    loop_var: VDU_STR
    index_var: VDU_IND

- set_fact:
    REPLACEABLE_JSON: []
- set_fact:
    REPLACEABLE_JSON: "{{REPLACEABLE_JSON}} + [ \"{{JSON_ITEM|join('COMMA')|replace(\"'\", '&amp;quot;')|replace('u&amp;','&amp;')|replace('COMMA', ',')|replace(': ',':')|replace(', ',',')}}\" ] "
  delegate_to: localhost
  loop: "{{MODDED_JSON}}"
  loop_control:
    loop_var: JSON_ITEM
    index_var: JSON_IND

# - debug: "{{REPLACEABLE_JSON}}"
# - pause: minutes=60

- shell: "python {{playbook_dir}}/../../files/vnf_instantiation/xl_xml.py {{file}} get_xpaths"
  register: ASSOCIATED_XPATHS
  delegate_to: localhost
#
# - debug: msg="{{new_lcmd_xml}}"
# - pause: minutes=60
# - debug: msg="{{new_lcmd_xml.xmlstring[39:]}}"

# - pause: minutes=10
# - xml:
#     xmlstring: "{{new_lcmd_xml.results[new_lcmd_xml.results|length - 1].xmlstring[39:]}}"
#     xpath: "{{ASSOCIATED_XPATHS.stdout_lines[0]}}"
#     value: "{{REPLACEABLE_JSON[0]}}"
#   register: new_lcmd_xml
#   delegate_to: localhost


# - debug: msg="{{new_lcmd_xml.xmlstring}}"
# - pause: minutes=10

# - xml:
#     xmlstring: "{{new_lcmd_xml.results[new_lcmd_xml.results|length - 1].xmlstring[39:]}}"
#     xpath: "{{VDO_XPATH}}"
#     value: "[{{REPLACEABLE_JSON[VDO_INDEX]}}]"
#   register: new_lcmd_xml
#   delegate_to: localhost
#   loop: "{{ASSOCIATED_XPATHS.stdout_lines}}"
#   loop_control:
#     loop_var: VDO_XPATH
#     index_var: VDO_INDEX

- include_tasks: update_lcmd_wtf.yml FILE_WTF="{{file}}" VDO_XPATH_WTF="{{VDO_XPATH}}" REPLACEABLE_JSON_WTF="{{REPLACEABLE_JSON[VDO_INDEX]}}"
  loop: "{{ASSOCIATED_XPATHS.stdout_lines}}"
  loop_control:
    loop_var: VDO_XPATH
    index_var: VDO_INDEX

# - debug: msg="{{new_lcmd_xml}}"
# - pause: minutes=60


# new_lcmd_xml.results[0].xmlstring
# - debug: msg="{{REPLACEABLE_JSON}}"
# - debug: msg="{{file}}"
# - debug: msg="{{ASSOCIATED_XPATHS}}"

# - pause: minutes=60
#
# - copy: content="{{new_lcmd_xml.results[new_lcmd_xml.results|length - 1].xmlstring[39:]|replace('<vdu-descriptor>','<vdu-descriptor xmlns='+LCMD_NAMESPACE+'>')}}" dest={{file}}
#   delegate_to: localhost




# - debug: msg="{{MODDED_JSON}}"

# VNFD_UPGRADE_PARAMS[VNFD_ID.matches[0]['vnfd-id']]
# VNFD_UPGRADE_PARAMS[repl['VNFD_ID']].OLD_VERSION
# VNFD_UPGRADE_PARAMS[repl['VNFD_ID']].NEW_VERSION
