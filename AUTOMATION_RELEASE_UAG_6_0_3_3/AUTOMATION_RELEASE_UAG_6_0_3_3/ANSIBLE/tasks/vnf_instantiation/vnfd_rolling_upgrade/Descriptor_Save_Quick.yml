- name: Getting Access Token
  uri:
      url: "{{LOGIN_URL}}"
      method: "POST"
      body: '{"authType": "LOCAL", "password": "{{CMS_WEB_PASSWORD}}", "username": "{{CMS_WEB_USER}}"}'
      status_code:  200
      body_format: json
      validate_certs: no
  delegate_to: localhost
  register: login_response

- name: Uploading NSD
  shell: "for nsd_file in `(ls {{DESCRIPTOR_PATH}}/{{DESCRIPTOR_INFO.0}}/*NSD*)`;do curl -s  -k -X POST -F file=@\"$nsd_file; type = text/xml\" -F listName=descriptor -F descriptorId='' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}};done;"
  delegate_to: localhost




- include_tasks: query_db.yml QUERY="select id from nsd_descriptor where version='{{NEW_NSD_VERSION}}' and name='{{NSD_Name}}'"

- set_fact:
    NSD_DB_ID: "{{RESP.stdout_lines.0}}"

- name: Uploading LVND
  shell: "for lvnd_file in `(ls {{DESCRIPTOR_PATH}}/{{DESCRIPTOR_INFO.0}}/*LVND*)`;do curl -s  -k -X POST -F file=@\"$lvnd_file; type = text/xml\"  -F listName=descriptor -F descriptorId='{{NSD_DB_ID}}' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}};done;"
  delegate_to: localhost

- name: Uploading VNFD
  shell: "for vnfd_file in `(ls {{DESCRIPTOR_PATH}}/{{DESCRIPTOR_INFO.0}}/*VNFD*)`;do curl -s  -k -X POST -F file=@\"$vnfd_file; type = text/xml\"  -F listName=descriptor -F descriptorId='{{NSD_DB_ID}}' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}};done;"
  delegate_to: localhost

- name: Uploading VLD
  shell: "for vld_file in `(ls {{DESCRIPTOR_PATH}}/{{DESCRIPTOR_INFO.0}}/*VLD*)`;do curl -s  -k -X POST -F file=@\"$vld_file; type = text/xml\"  -F listName=descriptor -F descriptorId='{{NSD_DB_ID}}' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}};done;"
  delegate_to: localhost


- shell: "ls {{DESCRIPTOR_PATH}}/{{DESCRIPTOR_INFO.0}}/*LCMD*"
  delegate_to: localhost
  register: LCMD_FILES


- name: "Get VNFD_IDs and VERSIONS"
  shell: "grep -e 'vnfd-id' -e 'descriptor-version' `(grep -r \"<life-cycle-state-metadata>$(grep '<metadata-id' {{item}} | cut -f2 -d'>'|cut -f1 -d'<')</life-cycle-state-metadata>\" {{DESCRIPTOR_PATH}}/{{DESCRIPTOR_INFO.0}}/ | awk '{print $1}' | cut -d':' -f1)` | sed -e 's,.*<vnfd-id>\\([^<]*\\)</vnfd-id>.*,\\1,g' | sed -e 's,.*<descriptor-version>\\([^<]*\\)</descriptor-version>.*,\\1,g'"
  with_items: "{{LCMD_FILES.stdout_lines}}"
  register: vnfd_details
  delegate_to: localhost

- set_fact:
    QUERY_BUILDER: ""
    ORDER_BUILDER: ""

- set_fact:
    QUERY_BUILDER: "{{QUERY_BUILDER}} UNION (select id from vnfd_descriptor where vnfd_id='{{vnfd_detail.stdout_lines.0}}' AND version='{{vnfd_detail.stdout_lines.1}}' ORDER BY id DESC LIMIT 1)"
    # ORDER_BUILDER: "{{ORDER_BUILDER}} WHEN '{{vnfd_detail.stdout_lines.0}}' THEN '{{vnfd_index}}'"
  loop: "{{vnfd_details.results}}"
  loop_control:
    loop_var: vnfd_detail
    index_var: vnfd_index

# - include_tasks: query_db.yml QUERY="select id from vnfd_descriptor where {{QUERY_BUILDER[3:]}} ORDER BY CASE vnfd_id {{ORDER_BUILDER}} END"
- include_tasks: query_db.yml QUERY="{{QUERY_BUILDER[6:]}}"


- name: "Save LCMD Descriptor"
  shell: "curl -s  -k -X POST -F file=@'{{LCMD_FILES.stdout_lines[LCMD_INDEX_VAR]}}; type = text/xml' -F listName=descriptor -F descriptorId='{{VNFD_DB_ID}}' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}}"
  register: curl_resp
  delegate_to: localhost
  loop: "{{RESP.stdout_lines}}"
  loop_control:
    loop_var: VNFD_DB_ID
    index_var: LCMD_INDEX_VAR
