- include_tasks: query_db.yml QUERY="select nsd_descriptor.nsd_id, nsd_descriptor.name, nsd_descriptor.id, nsd_descriptor.version, nsd_descriptor.tenant, nsd_descriptor_status.status, lvnd_descriptor.version, lvnd_descriptor.lvnd_id, lvnd_descriptor.name, lvnd_descriptor.id, lvnd_descriptor_status.status, lvnd_descriptor_status.fk_lvnd_descriptor from nsd_descriptor INNER JOIN nsd_descriptor_status ON nsd_descriptor.id=nsd_descriptor_status.fk_nsd_descriptor INNER JOIN lvnd_descriptor ON lvnd_descriptor.fk_nsd_descriptor=nsd_descriptor.id INNER JOIN lvnd_descriptor_status ON lvnd_descriptor_status.fk_lvnd_descriptor=lvnd_descriptor.id where nsd_descriptor.name='{{NSD_Name}}' AND nsd_descriptor.version='{{NEW_NSD_VERSION}}'"
- set_fact:
    NSD_DB_ID: "{{RESP.stdout_lines.0.split('\t')[2]}}"
    LVND_DB_ID: "{{RESP.stdout_lines.0.split('\t')[9]}}"

- name: Getting Access Token
  uri:
      url: "{{LOGIN_URL}}"
      method: "POST"
      body: '{"authType": "LOCAL", "password": "{{CMS_WEB_PASSWORD}}", "username": "{{CMS_WEB_USER}}"}'
      status_code:  200
      body_format: json
      validate_certs: no
  register: login_response
  delegate_to: localhost

- shell: "curl -s -k -X \"DELETE\" --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_OFFBOARD_URL}}/LVND/{{LVND_DB_ID}}"
  delegate_to: localhost
  register: curl_resp

- command: "mysql -u{{ MYSQL_USER }} -p{{ MYSQL_PASSWD }} {{ MYSQL_DB }} -sN -e \"select count(lvnd_descriptor_status.status) from lvnd_descriptor_status where fk_lvnd_descriptor='{{LVND_DB_ID}}' AND ((not status='Deleted') and (not status='SAVED'))\" "
  register: STATUS_RESP
  remote_user: "{{CMS_IP_SYSUSER}}"
  retries: "{{DESCRIPTOR_RETRIES}}"
  delay: "{{ DELAY }}"
  until: STATUS_RESP.stdout_lines.0 == "0"
  ignore_errors: yes

- fail:
    msg:
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
      - "#####"
      - "#####"
      - "#####"
      - "#####          FAILED TO OFFBOARD LVND - LVND is still in Onboarded/InUse state"
      - "#####          Please Resolve the Issue and Try Again"
      - "#####"
      - "#####"
      - "#####"
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
  when: STATUS_RESP.stdout_lines.0 != "0"

- shell: "curl -s -k -X \"DELETE\" --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_OFFBOARD_URL}}/NSD/{{NSD_DB_ID}}"
  delegate_to: localhost
  register: curl_resp

- command: "mysql -u{{ MYSQL_USER }} -p{{ MYSQL_PASSWD }} {{ MYSQL_DB }} -sN -e \"select count(nsd_descriptor_status.status) from nsd_descriptor_status where fk_nsd_descriptor='{{NSD_DB_ID}}' AND ((not status='Deleted') and (not status='SAVED'))\" "
  register: STATUS_RESP
  remote_user: "{{CMS_IP_SYSUSER}}"
  retries: "{{DESCRIPTOR_RETRIES}}"
  delay: "{{ DELAY }}"
  until: STATUS_RESP.stdout_lines.0 == "0"
  ignore_errors: yes

- fail:
    msg:
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
      - "#####"
      - "#####"
      - "#####"
      - "#####          FAILED TO OFFBOARD NSD - NSD is still in Onboarded/InUse state"
      - "#####          Please Resolve the Issue and Try Again"
      - "#####"
      - "#####"
      - "#####"
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
  when: STATUS_RESP.stdout_lines.0 != "0"

- include_tasks: query_db.yml QUERY="select id from vld_descriptor where fk_nsd_descriptor='{{NSD_DB_ID}}'"
- set_fact: DEL_IDS="{{RESP.stdout_lines}}"

- shell: "curl -s -k -X \"DELETE\" --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_OFFBOARD_URL}}/VLD/{{item}}"
  delegate_to: localhost
  with_items: "{{DEL_IDS}}"
  register: curl_resp

- command: "mysql -u{{ MYSQL_USER }} -p{{ MYSQL_PASSWD }} {{ MYSQL_DB }} -sN -e \"select count(vld_descriptor_status.status) from vld_descriptor_status where fk_vld_descriptor in (select id from vld_descriptor where fk_nsd_descriptor='{{NSD_DB_ID}}') AND ((not status='Deleted') and (not status='SAVED'))\" "
  register: STATUS_RESP
  remote_user: "{{CMS_IP_SYSUSER}}"
  retries: "{{DESCRIPTOR_RETRIES}}"
  delay: "{{ DELAY }}"
  until: STATUS_RESP.stdout_lines.0 == "0"
  ignore_errors: yes

- fail:
    msg:
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
      - "#####"
      - "#####"
      - "#####"
      - "#####          FAILED TO OFFBOARD ALL VLD(s) - {{STATUS_RESP.stdout_lines.0}} VLD(s) are still in Onboarded/InUse state"
      - "#####          Please Resolve the Issue and Try Again"
      - "#####"
      - "#####"
      - "#####"
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
  when: STATUS_RESP.stdout_lines.0 != "0"

- include_tasks: query_db.yml QUERY="select lcmd_descriptor.id, vnfd_descriptor.id from lcmd_descriptor inner join vnfd_descriptor on lcmd_descriptor.fk_vnfd_descriptor=vnfd_descriptor.id inner join vnfd_descriptor_status on vnfd_descriptor_status.fk_vnfd_descriptor=vnfd_descriptor.id inner join lcmd_descriptor_status on lcmd_descriptor_status.fk_lcmd_descriptor = lcmd_descriptor.id where lcmd_descriptor.fk_vnfd_descriptor in (select id from vnfd_descriptor where fk_nsd_descriptor={{NSD_DB_ID}})"

- set_fact:
    LCMD_VNFD_VALUES: "{{RESP.stdout_lines}}"

- shell: "curl -s -k -X \"DELETE\" --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_OFFBOARD_URL}}/VNFD/{{item.split('\t')[1]}}"
  delegate_to: localhost
  with_items: "{{LCMD_VNFD_VALUES}}"
  register: curl_resp

- command: "mysql -u{{ MYSQL_USER }} -p{{ MYSQL_PASSWD }} {{ MYSQL_DB }} -sN -e \"select count(vnfd_descriptor_status.status) from vnfd_descriptor_status where fk_vnfd_descriptor in (select id from vnfd_descriptor where fk_nsd_descriptor='{{NSD_DB_ID}}') AND ((not status='Deleted') and (not status='SAVED') and (not status='InUse'))\" "
  register: STATUS_RESP
  remote_user: "{{CMS_IP_SYSUSER}}"
  retries: "{{DESCRIPTOR_RETRIES}}"
  delay: "{{ DELAY }}"
  until: STATUS_RESP.stdout_lines.0 == "0"
  ignore_errors: yes

- fail:
    msg:
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
      - "#####"
      - "#####"
      - "#####"
      - "#####          FAILED TO OFFBOARD ALL VNFD(s) - {{STATUS_RESP.stdout_lines.0}} VNFD(s) are still in Onboarded/InUse state"
      - "#####          Please Resolve the Issue and Try Again"
      - "#####"
      - "#####"
      - "#####"
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
  when: STATUS_RESP.stdout_lines.0 != "0"

- shell: "curl -s -k -X \"DELETE\" --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_OFFBOARD_URL}}/LCMD/{{item.split('\t')[0]}}"
  delegate_to: localhost
  with_items: "{{LCMD_VNFD_VALUES}}"
  register: curl_resp

- command: "mysql -u{{ MYSQL_USER }} -p{{ MYSQL_PASSWD }} {{ MYSQL_DB }} -sN -e \"select count(lcmd_descriptor_status.status) from lcmd_descriptor_status where lcmd_descriptor_status.fk_lcmd_descriptor in (select id from lcmd_descriptor where fk_vnfd_descriptor in (select vnfd_descriptor.id from vnfd_descriptor where vnfd_descriptor.fk_nsd_descriptor='{{NSD_DB_ID}}'))  and ((not status='Deleted') and (not status='SAVED') and (not status='InUse'))\" "
  register: STATUS_RESP
  remote_user: "{{CMS_IP_SYSUSER}}"
  retries: "{{DESCRIPTOR_RETRIES}}"
  delay: "{{ DELAY }}"
  until: STATUS_RESP.stdout_lines.0 == "0"
  ignore_errors: yes

- fail:
    msg:
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
      - "#####"
      - "#####"
      - "#####"
      - "#####          FAILED TO OFFBOARD ALL LCMD(s) - {{STATUS_RESP.stdout_lines.0}} LCMD(s) are still in Onboarded/InUse state"
      - "#####          Please Resolve the Issue and Try Again"
      - "#####"
      - "#####"
      - "#####"
      - "#####################################################################################################################################################"
      - "#####################################################################################################################################################"
  when: STATUS_RESP.stdout_lines.0 != "0"
