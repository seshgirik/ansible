- shell: "python {{playbook_dir}}/../../files/vnf_instantiation/xl_xml.py {{playbook_dir}}/../../files/vnf_instantiation/CONFIG_DOWNLOADS/{{SNAPSHOT_NAME}}.xlsx"
  delegate_to: localhost

- include_tasks: query_db.yml
  vars:
      QUERY: "select fk_data_model from vnf_data_config where id='{{SNAPSHOT_ID}}'"

- set_fact:
    FK_DATA_MODEL: "{{RESP.stdout_lines.0}}"

- pause:
    prompt: "\n\nEnter the name for new config"
  register: GIVEN_NAME

- set_fact:
    GIVEN_NAME: "{{GIVEN_NAME.user_input}}"

- name: Getting Access Token
  uri:
      url: "{{LOGIN_URL}}"
      method: "POST"
      body: '{"authType": "LOCAL", "password": "{{CMS_WEB_PASSWORD}}", "username": "{{CMS_WEB_USER}}"}'
      status_code:  200
      body_format: json
      validate_certs: no
  register: login_response

- shell: "curl -s  -k -X POST -F file=@'{{playbook_dir}}/../../files/vnf_instantiation/CONFIG_DOWNLOADS/{{SNAPSHOT_NAME}}_New.xml; type = text/xml' -F rowData=\"{'id':'',  'name':'{{GIVEN_NAME}}',  'fkDataModel':'{{FK_DATA_MODEL}}',  'attachFile':'{{SNAPSHOT_NAME}}.xml'}\" --cookie '{{login_response.set_cookie}}' {{IMPORT_SNAPSHOT_CONFIG_URL}}"
  register: curl_resp
  args:
    warn: false
  delegate_to: localhost

- debug: msg="{{curl_resp}}"

- include_tasks: query_db.yml
  vars:
      QUERY: "select vdu_id from vnf_config where fk_data_model='{{FK_DATA_MODEL}}'"

- set_fact:
    VDU_ID: "{{RESP.stdout_lines.0}}"

- include_tasks: query_db.yml
  vars:
      QUERY: "select id from vnf_data_config where name='Snapshot-{{GIVEN_NAME}}'"

- set_fact:
    CONFIGURED_ID: "{{RESP.stdout_lines.0}}"

- include_tasks: query_db.yml
  vars:
      QUERY: "select fk_vnf_data_running_version from vnf_config_status where vdu_id='{{VDU_ID}}'"

- set_fact:
    RUNNING_ID: "{{RESP.stdout_lines.0}}"

- include_tasks: query_db.yml
  vars:
      QUERY: "select name from vnf_data_config where id={{RUNNING_ID}}"
  when: not RUNNING_ID == "NULL"

- set_fact:
    RUNNING_NAME: "{{RESP.stdout_lines.0}}"
  when: not RUNNING_ID == "NULL"

- set_fact:
    RUNNING_NAME: ""
  when: RUNNING_ID == "NULL"

- set_fact:
    RESOURCE_ID: "{{ GIVEN_NAME| to_uuid }}"
    CONFIGURED_NAME: "Snapshot-{{GIVEN_NAME}}"

- include_tasks: query_db.yml
  vars:
      QUERY: "select id from vnf_config_status where vdu_id='{{VDU_ID}}'"
- set_fact:
    VNF_CONFIG_STATUS_ID: "{{RESP.stdout_lines.0}}"

- shell: "curl -s  -k -X  POST -F rowData=\"{'id':'{{VNF_CONFIG_STATUS_ID}}', 'vnf':'{{VDU_ID}}', configuredId: '{{CONFIGURED_ID}}', configuredName: '{{CONFIGURED_NAME}}', 'runningId': '{{RUNNING_ID}}', 'runningName': '{{RUNNING_NAME}}', 'resourceId':'{{RESOURCE_ID}}', 'haOperMode':'active_c'}\" --cookie '{{login_response.set_cookie}}' {{APPLY_SNAPSHOT_URL}}"
  register: curl_resp
  args:
    warn: false
  delegate_to: localhost

- debug: msg="{{curl_resp}}"
