---


    - name: Read VNFD_Id attribute from XML
      xml:
         xmlstring: "{{lookup('file', '{{ XML_PATH }}') | regex_replace('xmlns=.*>', '>')}}"
         xpath: "{{ DESCRIPTOR_ONBOARD_CON_INFO.VNFD_Id }}"
         content: text
      register: xmlIDresp
      delegate_to: localhost

    - debug:
        var: "{{xmlIDresp.matches[0]['vnfd-id']}}"

    - name: Read NSD_Version attribute from XML
      xml:
         xmlstring: "{{lookup('file', '{{ XML_PATH }}') | regex_replace('xmlns=.*>', '>')}}"
         xpath: "{{ DESCRIPTOR_ONBOARD_CON_INFO.VNFD_Version }}"
         content: text
      register: xmlVERresp
      delegate_to: localhost

    - debug:
        var: "{{xmlVERresp.matches[0]['descriptor-version']}}"

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select id from vnfd_descriptor where vnfd_id='{{xmlIDresp.matches[0][\"vnfd-id\"]}}' and version='{{xmlVERresp.matches[0][\"descriptor-version\"]}}'"
      when: (xmlIDresp.matches[0]["vnfd-id"] is defined)  and  (xmlVERresp.matches[0]["descriptor-version"] is defined)
    - set_fact: VNFD_DB_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select name from vnfd_descriptor where id='{{VNFD_DB_Id}}'"
      when: VNFD_DB_Id is defined
    - set_fact: VNFD_Name={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select status from vnfd_descriptor_status where id='{{VNFD_DB_Id}}'"
      when: VNFD_DB_Id is defined
    - set_fact: VNFD_Id_Status={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select fk_nsd_descriptor from vnfd_descriptor where id='{{VNFD_DB_Id}}'"
      when: VNFD_DB_Id is defined
    - set_fact: VNFD_NSD_DB_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select nsd_id from nsd_descriptor where id='{{VNFD_NSD_DB_Id}}'"
      when: VNFD_NSD_DB_Id is defined
    - set_fact: VNFD_NSD_Id={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select name from nsd_descriptor where id='{{VNFD_NSD_DB_Id}}'"
      when: VNFD_NSD_DB_Id is defined
    - set_fact: VNFD_NSD_Name={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select version from nsd_descriptor where id='{{VNFD_NSD_DB_Id}}'"
      when: VNFD_NSD_DB_Id is defined
    - set_fact: VNFD_NSD_Version={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - include_tasks: ../query_db.yml
      vars:
         QUERY: "select status from nsd_descriptor_status where id='{{VNFD_NSD_DB_Id}}'"
      when: VNFD_NSD_DB_Id is defined
    - set_fact: VNFD_NSD_Id_Status={{RESP.stdout_lines.0}}
      when: RESP.stdout_lines.0 is defined

    - name: Getting Access Token
      uri:
          url: "{{LOGIN_URL}}"
          method: "POST"
          body: '{"authType": "LOCAL", "password": "{{CMS_WEB_PASSWORD}}", "username": "{{CMS_WEB_USER}}"}'
          status_code:  200
          body_format: json
          validate_certs: no
      register: login_response
      delegate_to: localhost

    - shell: "curl -s -k -X \"DELETE\" --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_OFFBOARD_URL}}/VNFD/{{VNFD_DB_Id}}"
      delegate_to: localhost
      register: curl_resp

    - debug: msg="{{curl_resp}}"
#    - include_tasks: ../https_request.yml
#                        URL="{{DESCRIPTOR_OFFBOARD_URL}}/VNFD/{{VNFD_DB_Id}}"
#                        METHOD="DELETE"
#                        PAYLOAD="rowData={"fkNsdDescriptor":{"type":"NSD","version":"'{{VNFD_NSD_Version}}'","descriptorId":"'{{VNFD_NSD_Id}}'","namespace":"urn:mitel:params:xml:vnf:yang:nsd","name":"'{{VNFD_NSD_Name}}'","id":'{{VNFD_NSD_DB_Id}}',"parentDescriptorId":"","uniqueId":"","status":"'{{VNFD_NSD_Id_Status}}'"},"type":"VNFD","version":"'{{xmlVERresp.matches[0]["descriptor-version"]}}'","descriptorId":"'{{xmlIDresp.matches[0]["vnfd-id"]}}'","namespace":"namespace":"urn:mitel:params:xml:vnf:yang:vnfd","name":"'{{VNFD_Name}}'","id":'{{VNFD_DB_Id}}',"tenant":"'{{Tenant_Name}}'","parentDescriptorId":"'{{VNFD_NSD_Id}}'","uniqueId":"","status":"'{{VNFD_Id_Status}}'"}"
#      when: (VNFD_NSD_Id) and (VNFD_NSD_Name) and (VNFD_NSD_DB_Id) and (VNFD_NSD_Version) and (xmlVERresp.matches[0]["descriptor-version"]) and (xmlIDresp.matches[0]["vnfd-id"]) and (VNFD_Name) and (VNFD_DB_Id)

    - command: "mysql -u{{ MYSQL_USER }} -p{{ MYSQL_PASSWD }} {{ MYSQL_DB }} -sN -e \"select status from vnfd_descriptor_status where fk_vnfd_descriptor='{{VNFD_DB_Id}}'\" "
      register: STATUS_RESP
      remote_user: "{{CMS_IP_SYSUSER}}"
      retries: "{{DESCRIPTOR_RETRIES}}"
      delay: "{{ DELAY }}"
      until: ( not VNFD_DB_Id ) or ( STATUS_RESP.stdout_lines.0|lower in "Deleted"|lower ) or ( STATUS_RESP.stdout_lines.0|lower in "Failed"|lower ) or ( STATUS_RESP.stdout_lines.0|lower in "Saved"|lower )
      ignore_errors: yes

    - name: fail the play if the previous command did not succeed
      fail:
        msg:
        - ""
        - ""
        - "################################################################"
        - "################################################################"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                  VNFD STATUS: {{STATUS_RESP.stdout_lines.0.rjust(10)}}                 ###"
        - "###     Somthing went wrong, Please check the logs or DB     ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "###                                                          ###"
        - "################################################################"
        - "################################################################"
        - ""
        - ""
      when: not ( ( STATUS_RESP.stdout_lines.0|lower in "Deleted"|lower ) or ( STATUS_RESP.stdout_lines.0|lower in "Failed"|lower ) or ( STATUS_RESP.stdout_lines.0|lower in "Saved"|lower ) )

    # - include_tasks: ../query_db.yml
    #   vars:
    #      QUERY: "select status from vnfd_descriptor_status where fk_vnfd_descriptor='{{VNFD_DB_Id}}'"
    #   when: VNFD_DB_Id is defined
    # - set_fact: VNFDStatus={{RESP.stdout_lines.0}}
    #   when: RESP.stdout_lines.0 is defined
    #
    #
    #
    # - include_tasks: ../query_db.yml
    #   vars:
    #      QUERY: "select status from vnfd_descriptor_status where fk_vnfd_descriptor='{{VNFD_DB_Id}}'"
    #   when: VNFD_DB_Id is defined
    # - set_fact: VNFDStatus={{RESP.stdout_lines.0}}
    #   when: RESP.stdout_lines.0 is defined
    #   retries: "{{ DESCRIPTOR_RETRIES }}"
    #   delay: "{{ DELAY }}"
    #   until: ( not VNFD_DB_Id ) or ( {{VNFDStatus|lower}} in "Deleted"|lower ) or ( {{VNFDStatus|lower}} in "Failed"|lower )
    #
    # - name: fail the play if the previous command did not succeed
    #   fail: msg="VNFD is in {{VNFDStatus}} state... Somthing went wrong, Please check the logs or DB"
    #   when: (VNFDStatus is defined) and not ( ( VNFDStatus|lower in "Deleted"|lower ) or ( VNFDStatus|lower in "Failed"|lower ) )
