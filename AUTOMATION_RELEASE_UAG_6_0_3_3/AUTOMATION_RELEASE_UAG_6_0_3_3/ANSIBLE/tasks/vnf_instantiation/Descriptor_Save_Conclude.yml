---
- name: Find file with pattern NSD*.xml
  include_tasks : ./find_files.yml
  vars:
    FILE_PATH: "{{ XML_PATH }}"
    FILE_PATTERN: "NSD*"

- set_fact:
    nsd_path: "{{files_found.files.0.path}}"

- name: "Get NSD ID"
  shell: "grep '<id' {{nsd_path}} | cut -f2 -d'>'|cut -f1 -d'<'|head -n 1"
  register: resp
  when: "desc_file_name is search('NSD')"
  delegate_to: localhost

- set_fact:
    xml_nsd_id: "{{resp.stdout_lines.0}}"
  when: resp.stdout_lines is defined

- name: "Get NSD VERSION"
  shell: "grep '<version' {{nsd_path}} | cut -f2 -d'>'|cut -f1 -d'<'|head -n 1"
  register: resp
  when: "desc_file_name is search('NSD')"
  delegate_to: localhost

- set_fact:
    xml_nsd_version: "{{resp.stdout_lines.0}}"
  when: resp.stdout_lines is defined

- name: Getting Access Token
  uri:
      url: "{{LOGIN_URL}}"
      method: "POST"
      body: '{"authType": "LOCAL", "password": "{{CMS_WEB_PASSWORD}}", "username": "{{CMS_WEB_USER}}"}'
      status_code:  200
      body_format: json
      validate_certs: no
  delegate_to: localhost
  register: login_response

- set_fact:
    SAVE_FAILED: "false"

- name: "Save NSD Descriptor"
  shell: "curl -s  -k -X POST -F file=@'{{desc_file.path}}; type = text/xml' -F listName=descriptor -F descriptorId='' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}}"
  register: curl_resp
  when: "desc_file_name is search('NSD')"
  delegate_to: localhost

- set_fact:
    SAVE_FAILED: "{{curl_resp.stdout|lower is search('failed')}}"
  when: curl_resp.stdout is defined

- name: "Get NSD_DB_ID"
  include_tasks: ./query_db.yml QUERY="select id from nsd_descriptor where nsd_id='{{xml_nsd_id}}' and version='{{xml_nsd_version}}'"
- set_fact: NSD_DB_ID={{ RESP.stdout_lines.0 }}
  when: RESP.stdout_lines.0 is defined

- name: "Save LVND Descriptor"
  shell: "curl -s  -k -X POST -F file=@'{{desc_file.path}}; type = text/xml' -F listName=descriptor -F descriptorId='{{NSD_DB_ID}}' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}}"
  register: curl_resp
  when: (desc_file_name is search('LVND')) and (NSD_DB_ID is defined)
  delegate_to: localhost

- set_fact:
    SAVE_FAILED: "{{curl_resp.stdout|lower is search('failed')}}"
  when: curl_resp.stdout is defined

- name: "Save VNFD/VLD Descriptor"
  shell: "curl -s  -k -X POST -F file=@'{{desc_file.path}}; type = text/xml' -F listName=descriptor -F descriptorId='{{NSD_DB_ID}}' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}}"
  register: curl_resp
  when: (((desc_file_name is search('VNFD')) or (desc_file_name | search('VLD'))) and (NSD_DB_ID is defined))
  delegate_to: localhost

- set_fact:
    SAVE_FAILED: "{{curl_resp.stdout|lower is search('failed')}}"
  when: curl_resp.stdout is defined

- name: "Get LCMD ID"
  shell: "grep '<metadata-id' {{desc_file.path}} | cut -f2 -d'>'|cut -f1 -d'<'"
  register: lcmd_resp
  when: desc_file_name is search('LCMD')
  delegate_to: localhost

- set_fact:
    xml_lcmd_id: "{{lcmd_resp.stdout_lines.0}}"
  when: lcmd_resp.stdout_lines is defined

- debug:
    msg: "select fk_vnfd_descriptor from lcmd_descriptor where lcmd_id='{{xml_lcmd_id}}'"
  when: (xml_lcmd_id is defined) and (RESP is defined)

- include_tasks: query_db.yml QUERY="select fk_vnfd_descriptor from lcmd_descriptor where lcmd_id='{{xml_lcmd_id}}'"
  when: xml_lcmd_id is defined
- set_fact: VNFD_ID="{{ RESP.stdout_lines.0 }}"
  when: (xml_lcmd_id is defined) and (RESP.stdout_lines.0 is defined)

- include_tasks: query_db.yml QUERY="select vnfd_id from vnfd_descriptor where id='{{VNFD_ID}}'"
  when: xml_lcmd_id is defined
- set_fact: USED_VNFD_ID="{{ RESP.stdout_lines.0 }}"
  when: (xml_lcmd_id is defined) and (RESP.stdout_lines.0 is defined)

- include_tasks: query_db.yml QUERY="select version from vnfd_descriptor where id='{{VNFD_ID}}'"
  when: xml_lcmd_id is defined
- set_fact: USED_VNFD_VERSION="{{ RESP.stdout_lines.0 }}"
  when: (xml_lcmd_id is defined) and (RESP.stdout_lines.0 is defined)

- include_tasks: query_db.yml QUERY="select id from vnfd_descriptor where vnfd_id='{{USED_VNFD_ID}}' and version='{{USED_VNFD_VERSION}}' and fk_nsd_descriptor='{{NSD_DB_ID}}'"
  when: (USED_VNFD_ID is defined) and (USED_VNFD_VERSION is defined) and (NSD_DB_ID is defined)
- set_fact: VNFD_DB_ID="{{ RESP.stdout_lines.0 }}"
  when: (xml_lcmd_id is defined) and (RESP.stdout_lines.0 is defined)

- name: "Save LCMD Descriptor"
  shell: "curl -s  -k -X POST -F file=@'{{desc_file.path}}; type = text/xml' -F listName=descriptor -F descriptorId='{{VNFD_DB_ID}}' -F productId='' --cookie '{{login_response.set_cookie}}' {{DESCRIPTOR_UPLOAD_URL}}"
  register: curl_resp
  when: ( desc_file_name is search('LCMD') ) and (VNFD_DB_ID is defined) and (NSD_DB_ID is defined)
  delegate_to: localhost

- set_fact:
    SAVE_FAILED: "{{curl_resp.stdout|lower is search('failed')}}"
  when: curl_resp.stdout is defined

- fail:
    msg:
    - "#####"
    - "#####"
    - "#####"
    - "#####"
    - "#####"
    - "#####   Failed to upload, please check this file:"
    - "#####   {{desc_file.path}}"
    - "#####"
    - "#####"
    - "#####"
    - "#####"
    - "#####"
  when: SAVE_FAILED
