- name: "Creating CRDL Server group"
  shell: "source {{KEYSTONE_SOURCE_PATH}} && openstack server group create {{CRDL_SERVER_GROUP_NAME}} --policy {{CRDL_SERVER_GROUP_POLICY}}"
  remote_user: "{{USER}}"

- name: "Getting server group ID from {{CRDL_SERVER_GROUP_NAME}}"
  shell: "source {{KEYSTONE_SOURCE_PATH}} && openstack server group list | grep -i {{CRDL_SERVER_GROUP_NAME}} |awk '{print $2}'"
  remote_user: "{{USER}}"
  register: CRDL_SRV_GRP_RESP

- name: "Updating *.env with servergroup ID"
  shell: "sed -i 's/WILL_BE_UPDATED_DURING_RUNTIME/{{CRDL_SRV_GRP_RESP.stdout_lines.0}}/g' {{playbook_dir}}/../../files/heat_templates/crdl/*.env"
  delegate_to: localhost

- name: "Download {{CRDL_ADMIN_IMAGE_LINK}}"
  shell: "cd {{HOME_DIR}} && wget '{{CRDL_ADMIN_IMAGE_LINK}}' -O crdl_admin.{{CRDL_ADMIN_IMAGE_LINK.split('.')[-1]}}"
  remote_user: "{{USER}}"

- name: "Downloading {{CRDL_CLUSTER_IMAGE_LINK}}"
  shell: "cd {{HOME_DIR}} && wget '{{CRDL_CLUSTER_IMAGE_LINK}}' -O crdl_cluster.{{CRDL_CLUSTER_IMAGE_LINK.split('.')[-1]}}"
  remote_user: "{{USER}}"

- shell: "rm -rf {{HOME_DIR}}/crdl_admin_img && rm -rf {{HOME_DIR}}/crdl_cluster_img && rm -rf {{HOME_DIR}}/crdl_volume_env && rm -rf {{HOME_DIR}}/crdl_admin_env && rm -rf {{HOME_DIR}}/crdl_cluster_env"
  remote_user: "{{USER}}"

- shell: "mkdir {{HOME_DIR}}/crdl_admin_img && mkdir {{HOME_DIR}}/crdl_cluster_img && mkdir {{HOME_DIR}}/crdl_volume_env && mkdir {{HOME_DIR}}/crdl_admin_env && mkdir {{HOME_DIR}}/crdl_cluster_env"
  remote_user: "{{USER}}"

- name: "Copy volume .env files"
  shell: "sshpass -p {{PASSWD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl/*Volume* {{USER}}@{{inventory_hostname}}:{{HOME_DIR}}/crdl_volume_env/"
  delegate_to: localhost

- name: "Copy volume .yaml file"
  shell: "sshpass -p {{PASSWD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl/{{CRDL_VOLUME_YAML_NAME}} {{USER}}@{{inventory_hostname}}:{{HOME_DIR}}/crdl_volume_env/"
  delegate_to: localhost

- name: "Untar crdl_admin.{{CRDL_ADMIN_IMAGE_LINK.split('.')[-1]}}"
  shell: "cd {{HOME_DIR}} && tar -xvf crdl_admin.{{CRDL_ADMIN_IMAGE_LINK.split('.')[-1]}} -C ./crdl_admin_img && cd crdl_admin_img/ &&  mv *.qcow2 crdl_admin.qcow2"
  remote_user: "{{USER}}"

- name: "Untar crdl_cluster.{{CRDL_CLUSTER_IMAGE_LINK.split('.')[-1]}}"
  shell: "cd {{HOME_DIR}} && tar -xvf crdl_cluster.{{CRDL_CLUSTER_IMAGE_LINK.split('.')[-1]}} -C ./crdl_cluster_img && cd crdl_cluster_img/ &&  mv *.qcow2 crdl_cluster.qcow2"
  remote_user: "{{USER}}"

- name: "Delete crdl_admin.{{CRDL_ADMIN_IMAGE_LINK.split('.')[-1]}}"
  shell: "cd {{HOME_DIR}} && rm -rf crdl_admin.{{CRDL_ADMIN_IMAGE_LINK.split('.')[-1]}}"
  remote_user: "{{USER}}"

- name: "Delete crdl_cluster.{{CRDL_CLUSTER_IMAGE_LINK.split('.')[-1]}}"
  shell: "cd {{HOME_DIR}} && rm -rf crdl_cluster.{{CRDL_CLUSTER_IMAGE_LINK.split('.')[-1]}}"
  remote_user: "{{USER}}"

- shell: "source {{KEYSTONE_SOURCE_PATH}} && cd {{HOME_DIR}}/crdl_admin_img && openstack image create {{CRDL_ADMIN_IMAGE_CREATION_NAME}} --disk-format qcow2 --container-format=bare --file crdl_admin.qcow2"
  remote_user: "{{USER}}"

- shell: "source {{KEYSTONE_SOURCE_PATH}} && cd {{HOME_DIR}}/crdl_cluster_img && openstack image create {{CRDL_CLUSTER_IMAGE_CREATION_NAME}} --disk-format qcow2 --container-format=bare --file crdl_cluster.qcow2"
  remote_user: "{{USER}}"

- shell: "source {{KEYSTONE_SOURCE_PATH}} && cd {{HOME_DIR}}/crdl_volume_env/ && for vol_env in `(ls ./*.env)`; do stack_prefix='STACK_';stack_name_part=`(sed -n 2p $vol_env | cut -d':' -f2 | awk '{print $1}')`;new_stack_name=$stack_prefix$stack_name_part;openstack stack create -t {{CRDL_VOLUME_YAML_NAME}} -e $vol_env $new_stack_name; done;"
  remote_user: "{{USER}}"

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && for env_file in `(ls *Admin*.env *Cluster*.env)`; do echo `(cat $env_file | grep volume | cut -d':' -f2 | awk '{print $1}')`; done;"
  register: CRDL_VOLUME_NAMES
  delegate_to: localhost

- set_fact:
    GREP_PARAMS: ""
- set_fact:
    GREP_PARAMS: "{{GREP_PARAMS}} -e {{item}}"
  with_items: "{{CRDL_VOLUME_NAMES.stdout_lines}}"

- shell: "source {{KEYSTONE_SOURCE_PATH}} && openstack volume list | grep {{GREP_PARAMS}} | awk '{print $2}'"
  register: CRDL_VOLUME_IDS
  remote_user: "{{USER}}"

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && for env_file in `(ls *Admin*.env *Cluster*.env)`; do echo $env_file; done;"
  delegate_to: localhost
  register: ADMIN_CLUSTER_ENVS

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && sed -i 's/{{CRDL_VOLUME_NAMES.stdout_lines[CRDL_VOLUME_INDEX]}}/{{CRDL_VOLUME_IDS.stdout_lines[CRDL_VOLUME_INDEX]}}/g' ./{{ENV_FILE}}"
  delegate_to: localhost
  loop: "{{ADMIN_CLUSTER_ENVS.stdout_lines}}"
  loop_control:
    loop_var: ENV_FILE
    index_var: CRDL_VOLUME_INDEX

- name: "Copy Admin .env files"
  shell: "sshpass -p {{PASSWD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl/*Admin* {{USER}}@{{inventory_hostname}}:{{HOME_DIR}}/crdl_admin_env/"
  delegate_to: localhost

- name: "Copy Admin .yaml file"
  shell: "sshpass -p {{PASSWD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl/{{CRDL_ADMIN_YAML_NAME}} {{USER}}@{{inventory_hostname}}:{{HOME_DIR}}/crdl_admin_env/"
  delegate_to: localhost

- name: "Copy Cluster .env files"
  shell: "sshpass -p {{PASSWD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl/*Cluster* {{USER}}@{{inventory_hostname}}:{{HOME_DIR}}/crdl_cluster_env/"
  delegate_to: localhost

- name: "Copy Cluster .yaml file"
  shell: "sshpass -p {{PASSWD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl/{{CRDL_CLUSTER_YAML_NAME}} {{USER}}@{{inventory_hostname}}:{{HOME_DIR}}/crdl_cluster_env/"
  delegate_to: localhost

- name: Creating Admin Nodes
  shell: "source {{KEYSTONE_SOURCE_PATH}} && cd {{HOME_DIR}}/crdl_admin_env/ && for admin_env in `(ls ./*Admin*.env)`; do stack_prefix='STACK_';stack_name_part=`(cat $admin_env | grep CRDL_names | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1)`;new_stack_name=$stack_prefix$stack_name_part;openstack stack create -t {{CRDL_ADMIN_YAML_NAME}} -e $admin_env $new_stack_name; done;"
  remote_user: "{{USER}}"


- name: Creating Cluster Nodes
  shell: "source {{KEYSTONE_SOURCE_PATH}} && cd {{HOME_DIR}}/crdl_cluster_env/ && for cluster_env in `(ls ./*Cluster*.env)`; do stack_prefix='STACK_';stack_name_part=`(cat $cluster_env | grep CRDL_names | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1)`;new_stack_name=$stack_prefix$stack_name_part;openstack stack create -t {{CRDL_CLUSTER_YAML_NAME}} -e $cluster_env $new_stack_name; done;"
  remote_user: "{{USER}}"

- pause: minutes=20

- shell: "sed -i 's/CRDL_CFG_PRODUCT/{{CRDL_CFG_PRODUCT}}/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "sed -i 's/CRDL_CFG_RAM_WEIGHT/{{CRDL_CFG_RAM_WEIGHT}}/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "sed -i 's/CRDL_CFG_USER_NAME/{{CRDL_CFG_USER_NAME}}/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "sed -i 's/CRDL_CFG_USER_PASSWD/{{CRDL_CFG_USER_PASSWD}}/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && for env_file in `(ls *Cluster*.env)`; do echo `(cat $env_file | grep CRDL_oam_ips | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1 | awk '{print $1}')`; done;"
  register: CRDL_CLUSTER_IPS
  delegate_to: localhost

- set_fact:
    CRDL_NODE_OAM_IP_LIST: ""

- set_fact:
    CRDL_NODE_OAM_IP_LIST: "{{CRDL_NODE_OAM_IP_LIST}} {{item}}"
  with_items: "{{CRDL_CLUSTER_IPS.stdout_lines}}"

- shell: "sed -i 's/CRDL_CFG_CLUSTER_OAM_IP_LIST/{{CRDL_NODE_OAM_IP_LIST[1:]}}/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && for env_file in `(ls *Cluster*.env)`; do echo `(cat $env_file | grep CRDL_db_traffic_ips | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1 | awk '{print $1}')`; done;"
  register: CRDL_CLUSTER_DB_IPS
  delegate_to: localhost

- set_fact:
    CRDL_NODE_DBTRAFFIC_IP_LIST: ""

- set_fact:
    CRDL_NODE_DBTRAFFIC_IP_LIST: "{{CRDL_NODE_DBTRAFFIC_IP_LIST}} {{item}}"
  with_items: "{{CRDL_CLUSTER_DB_IPS.stdout_lines}}"

- shell: "sed -i 's/CRDL_CFG_CLUSTER_DBTRAFFIC_IP_LIST/{{CRDL_NODE_DBTRAFFIC_IP_LIST[1:]}}/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && ls *Cluster*.env"
  register: CRDL_CLUSTER_ENVS
  delegate_to: localhost

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && cat {{CRDL_CLUSTER_ENVS.stdout_lines.0}} | grep CRDL_oam_ips | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1 | awk '{print $1}'"
  register: CRDL_CLUSTER_OAM_IP
  delegate_to: localhost

- include_tasks: setup_pwdless_generic.yml PWDLESS_IP="{{CRDL_CLUSTER_OAM_IP.stdout_lines.0}}" PWDLESS_USER="{{CRDL_SYS_USER_NAME}}" PWDLESS_PASSWD="{{CRDL_SYS_PASSWORD}}"

- name: "Copy crdl_bucket to '~' directory in remote host"
  shell: "sshpass -p {{CRDL_SYS_PASSWORD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket {{CRDL_SYS_USER_NAME}}@{{CRDL_CLUSTER_OAM_IP.stdout_lines.0}}:~/"
  delegate_to: localhost

- shell: "sed -i 's/{{CRDL_CFG_PRODUCT}}/CRDL_CFG_PRODUCT/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "sed -i 's/{{CRDL_CFG_RAM_WEIGHT}}/CRDL_CFG_RAM_WEIGHT/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "sed -i 's/{{CRDL_CFG_USER_NAME}}/CRDL_CFG_USER_NAME/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "sed -i 's/{{CRDL_CFG_USER_PASSWD}}/CRDL_CFG_USER_PASSWD/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "sed -i 's/{{CRDL_NODE_OAM_IP_LIST[1:]}}/CRDL_CFG_CLUSTER_OAM_IP_LIST/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- shell: "sed -i 's/{{CRDL_NODE_DBTRAFFIC_IP_LIST[1:]}}/CRDL_CFG_CLUSTER_DBTRAFFIC_IP_LIST/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_bucket/CB_SQL/couchbase_cluster.cfg"
  delegate_to: localhost

- name: "Executing CRDL_Cluster_setup.sh"
  shell: "cd ~/crdl_bucket/CB_Script && source /etc/profile && chmod +x *.sh && ./CRDL_Cluster_setup.sh"
  delegate_to: "{{CRDL_CLUSTER_OAM_IP.stdout_lines.0}}"
  remote_user: "{{CRDL_SYS_USER_NAME}}"

- name: "Executing CRDL_Bucket_Index_setup.sh"
  shell: "cd ~/crdl_bucket/CB_Script && source /etc/profile && chmod +x *.sh && ./CRDL_Bucket_Index_setup.sh"
  delegate_to: "{{CRDL_CLUSTER_OAM_IP.stdout_lines.0}}"
  remote_user: "{{CRDL_SYS_USER_NAME}}"

- shell: "sed -i 's/CRDL_CLUSTER_DB_IPS/{{CRDL_NODE_DBTRAFFIC_IP_LIST[1:]}}/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_admin/crdlMon.cfg"
  delegate_to: localhost

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && ls *Admin*.env"
  register: CRDL_ADMIN_ENVS
  delegate_to: localhost

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && cat {{CRDL_ADMIN_ENVS.stdout_lines.0}} | grep CRDL_oam_ips | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1 | awk '{print $1}'"
  register: CRDL_ADMIN_OAM_IP
  delegate_to: localhost

- include_tasks: setup_pwdless_generic.yml PWDLESS_IP="{{CRDL_ADMIN_OAM_IP.stdout_lines.0}}" PWDLESS_USER="{{CRDL_SYS_USER_NAME}}" PWDLESS_PASSWD="{{CRDL_SYS_PASSWORD}}"

- name: "Copy crdl_admin to '~' directory in remote host"
  shell: "sshpass -p {{CRDL_SYS_PASSWORD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_admin {{CRDL_SYS_USER_NAME}}@{{CRDL_ADMIN_OAM_IP.stdout_lines.0}}:~/"
  delegate_to: localhost

- name: "Executing crdlMon.sh"
  shell: "cd ~/crdl_admin/ && source /etc/profile && chmod +x *.sh && ./crdlMon.sh && service crdlMon start"
  delegate_to: "{{CRDL_ADMIN_OAM_IP.stdout_lines.0}}"
  remote_user: "{{CRDL_SYS_USER_NAME}}"

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && cat {{CRDL_ADMIN_ENVS.stdout_lines.1}} | grep CRDL_oam_ips | cut -d':' -f2 | cut -d'[' -f2 | cut -d']' -f1 | awk '{print $1}'"
  register: CRDL_ADMIN_OAM_IP
  when: CRDL_ADMIN_ENVS.stdout_lines.1 is defined
  delegate_to: localhost

- shell: "sed -i 's/ACTIVE/STANDBY/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_admin/crdlMon.cfg"
  when: CRDL_ADMIN_ENVS.stdout_lines.1 is defined
  delegate_to: localhost

- include_tasks: setup_pwdless_generic.yml PWDLESS_IP="{{CRDL_ADMIN_OAM_IP.stdout_lines.0}}" PWDLESS_USER="{{CRDL_SYS_USER_NAME}}" PWDLESS_PASSWD="{{CRDL_SYS_PASSWORD}}"
  when: CRDL_ADMIN_ENVS.stdout_lines.1 is defined

- name: "Copy crdl_admin to '~' directory in remote host"
  shell: "sshpass -p {{CRDL_SYS_PASSWORD}} /usr/bin/scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_admin {{CRDL_SYS_USER_NAME}}@{{CRDL_ADMIN_OAM_IP.stdout_lines.0}}:~/"
  when: CRDL_ADMIN_ENVS.stdout_lines.1 is defined
  delegate_to: localhost

- name: "Executing crdlMon.sh"
  shell: "cd ~/crdl_admin/ && source /etc/profile && chmod +x *.sh && ./crdlMon.sh && service crdlMon start"
  when: CRDL_ADMIN_ENVS.stdout_lines.1 is defined
  delegate_to: "{{CRDL_ADMIN_OAM_IP.stdout_lines.0}}"
  remote_user: "{{CRDL_SYS_USER_NAME}}"

- shell: "sed -i 's/STANDBY/ACTIVE/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_admin/crdlMon.cfg"
  delegate_to: localhost

- shell: "sed -i 's/{{CRDL_NODE_DBTRAFFIC_IP_LIST[1:]}}/CRDL_CLUSTER_DB_IPS/g' {{playbook_dir}}/../../files/heat_templates/crdl_bucket_admin_configuration/crdl_admin/crdlMon.cfg"
  delegate_to: localhost
