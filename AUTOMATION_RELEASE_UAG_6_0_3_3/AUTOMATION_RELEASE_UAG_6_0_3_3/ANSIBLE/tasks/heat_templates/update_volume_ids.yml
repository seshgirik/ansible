- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && for env_file in `(ls -1r *Admin*{{C_TENANT}}*.env *Cluster*{{C_TENANT}}*.env)`; do echo `(cat $env_file | grep volume | cut -d':' -f2 | awk '{print $1}')`; done;"
  register: CRDL_VOLUME_NAMES
  remote_user: "{{USER}}"

- set_fact:
    GREP_PARAMS: ""
- set_fact:
    GREP_PARAMS: "{{GREP_PARAMS}} -e {{item}}"
  with_items: "{{CRDL_VOLUME_NAMES.stdout_lines}}"

- shell: "source {{RC_FILE_PATH}} && openstack volume list | grep {{GREP_PARAMS}} | awk '{print $2}'"
  register: CRDL_VOLUME_IDS
  remote_user: "{{USER}}"

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && for env_file in `(ls -1r *Admin*{{C_TENANT}}*.env *Cluster*{{C_TENANT}}*.env)`; do echo $env_file; done;"
  delegate_to: localhost
  register: ADMIN_CLUSTER_ENVS

- shell: "cd {{playbook_dir}}/../../files/heat_templates/crdl/ && sed -i 's/{{CRDL_VOLUME_NAMES.stdout_lines[CRDL_VOLUME_INDEX]}}/{{CRDL_VOLUME_IDS.stdout_lines[CRDL_VOLUME_INDEX]}}/g' ./{{ENV_FILE}}"
  delegate_to: localhost
  loop: "{{ADMIN_CLUSTER_ENVS.stdout_lines}}"
  loop_control:
    loop_var: ENV_FILE
    index_var: CRDL_VOLUME_INDEX
  when: CRDL_VOLUME_IDS.stdout_lines|length == ADMIN_CLUSTER_ENVS.stdout_lines|length 
