- file:
    path: ~/log
    state: directory
  delegate_to: localhost

- shell: "echo ~/log/$(echo {{inventory_hostname}} | sed 's/\\./_/g')-dell_install_os.log"
  register: unitlog
  delegate_to: localhost

- shell: "echo $(ip -4 a show dev ens160 | grep inet | awk -F'[/ ]+' '{print $3}')"
  register: utility_ip_resp
  delegate_to: localhost

- set_fact:
    UTILITY_IP: "{{utility_ip_resp.stdout_lines.0}}"

- shell: "rm -rf {{unitlog.stdout_lines.0}}"
  args:
    warn: false
  delegate_to: localhost

- shell: "touch {{unitlog.stdout_lines.0}}"
  args:
    warn: false
  delegate_to: localhost

- name: "Ping the server"
  shell: "ping -c 2 -W 10 {{inventory_hostname}}"
  register: ping_res
  delegate_to: localhost

- debug:
    msg: "Server is up"
  when: not ping_res.failed

- fail:
    msg: "Server is not reachable"
  when: ping_res.failed

- name: "Set Boot Order"
  shell: "{{SSH_CMD}} racadm set BIOS.biosbootsettings.BootSeq HardDisk.List.1-1,NIC.Integrated.1-1-1,Floppy.iDRACVirtual.1-1,Optical.iDRACVirtual.1-1"
  register: bios_settings
  delegate_to: localhost

- name: "Check powerstatus"
  shell: "{{SSH_CMD}} racadm serveraction powerstatus | cut -d':' -f2|sed 's/^[ \t]*//'"
  register: power_status
  delegate_to: localhost

- name: "Power ON if OFF"
  shell: "{{SSH_CMD}} racadm serveraction poweron"
  delegate_to: localhost
  when: power_status == "OFF"

- name: "Setting remote image"
  shell: "{{SSH_CMD}} racadm remoteimage -d"
  register: rimg1
  delegate_to: localhost

- shell: "{{SSH_CMD}} racadm remoteimage -c -u root -p mavenir -l {{UTILITY_IP}}:{{ISO_PATH}}/{{ISO}}"
  register: rimg2
  delegate_to: localhost

- shell: "{{SSH_CMD}} racadm remoteimage -s"
  register: rimg3
  delegate_to: localhost

- name: "Setting to boot once"
  shell: "{{SSH_CMD}} racadm set iDRAC.serverboot.BootOnce Enabled"
  register: rimg4
  delegate_to: localhost

- name: "Setting boot device to VCD-DVD"
  shell: "{{SSH_CMD}} racadm set iDRAC.serverboot.FirstBootDevice VCD-DVD"
  register: rimg4
  delegate_to: localhost

# - name: "Setting iDRAC password"
#   shell: "racadm set iDRAC.Users.2.Password {{IDRAC_PW}}"
#   register: pass_set
#   remote_user: "{{IDRAC_USER}}"

- name: "Power cycling now"
  shell: "{{SSH_CMD}} racadm serveraction powercycle"
  register: pc
  delegate_to: localhost

- local_action: copy content="{{bios_settings.stdout}}\n\n{{rimg1.stdout}}\n\n{{rimg2.stdout}}\n\n{{rimg3.stdout}}\n\n{{rimg4.stdout}}\n\n{{rimg4.stdout}}\n\n{{pc.stdout}}\n\n" dest={{unitlog.stdout_lines.0}}
  ignore_errors: yes

- debug:
    msg: "logs saved in {{unitlog.stdout_lines.0}}"
