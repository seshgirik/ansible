- set_fact:
    SSH_IP: "{{OAM_CONF[inventory_hostname]['OAM_IP']}}"

- set_fact:
    NET_CMD_PREFIX: "source {{KEYSTONE_SOURCE_FILE_PATH}} && openstack"

- name: Setting up Provider Networks
  shell: "{{NET_CMD_PREFIX}} providernet create --description {{item.PNET.DESCRIPTION}} --mtu {{item.PNET.MTU}} --type {{item.PNET.TYPE}} --vlan-transparent {{item.PNET.VLAN_TRANSPARENT_FLAG | lower}} {{item.PNET.PROVIDER_NAME}}"
  with_items: "{{PROVIDER_NETWORKS}}"
  remote_user: "{{WRUSER}}"
  # become: yes
  # become_user: "{{WR_SUDO_USER}}"
  # become_method: sudo
  delegate_to: "{{SSH_IP}}"


- name: Adding Segmentation Ranges
  shell: "{{NET_CMD_PREFIX}} providernet range create --shared {{item.SGR.REL_PROVIDER_NAME}} --description {{item.SGR.DESCRIPTION}} --name {{item.SGR.SGR_NAME}} --range {{item.SGR.RANGE}}"
  with_items: "{{SEGMENTATION_RANGES}}"
  remote_user: "{{WRUSER}}"
  # become: yes
  # become_user: "{{WR_SUDO_USER}}"
  # become_method: sudo
  delegate_to: "{{SSH_IP}}"


- name: Setting up Networks
  shell: "{{NET_CMD_PREFIX}} network create {{item.NTWRK.NETWORK_NAME}} --provider-network-type {{item.NTWRK.REL_PROVIDER_NETWORK_TYPE}} --provider-physical-network {{item.NTWRK.REL_PROVIDER_NAME}} --provider-segment {{item.NTWRK.REL_PROVIDER_SEGMENT}} --availability-zone-hint {{item.NTWRK.AVAILABILITY_ZONE_HINT}}{{ ' --share' if item.NTWRK.SHARE_FLAG|lower == 'true' else '' }}"
  with_items: "{{NETWORKS}}"
  remote_user: "{{WRUSER}}"
  # become: yes
  # become_user: "{{WR_SUDO_USER}}"
  # become_method: sudo
  delegate_to: "{{SSH_IP}}"


- name: Adding Subnets
  shell: "{{NET_CMD_PREFIX}} subnet create {{item.SBNET.SUBNET_NAME}} --network {{item.SBNET.REL_NETWORK_NAME}} --ip-version {{item.SBNET.IP_VERSION}}{{ ' --no-dhcp' if item.SBNET.NO_DHCP_FLAG|lower == 'true' else '' }} --subnet-range {{item.SBNET.SUBNET_RANGE}}{{ ' --unmanaged' if item.SBNET.UNMANGED_FLAG|lower == 'true' else '' }} --gateway {{item.SBNET.GATEWAY|lower}}"
  with_items: "{{SUBNETS}}"
  remote_user: "{{WRUSER}}"
  # become: yes
  # become_user: "{{WR_SUDO_USER}}"
  # become_method: sudo
  delegate_to: "{{SSH_IP}}"
